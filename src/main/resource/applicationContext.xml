<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/><!--添加属性文件-->

    <!--以下代码为配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"></property>
        <property name="jdbcUrl"     value="${jdbc.url}"></property>
        <property name="user"        value="${jdbc.username}"></property>
        <property name="password"    value="${jdbc.password}"></property>

        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
        <property name="initialPoolSize" value="15"></property>
        <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
        <property name="maxIdleTime" value="0"></property>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="100"></property>
        <!-- 连接池中保留的最小连接数，默认为：3 -->
        <property name="minPoolSize" value="10"></property>
        <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。默认值: 0 -->
        <property name="maxStatements" value="200"></property>
        <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认:0 -->
        <property name="checkoutTimeout" value="3000" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="2" />
        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
        <property name="acquireRetryAttempts" value="0" />
        <!--重新尝试的时间间隔，默认为：1000毫秒 -->
        <property name="acquireRetryDelay" value="5000" />
        <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->
        <property name="autoCommitOnClose" value="false"></property>
        <!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值:null -->
        <property name="automaticTestTable" value="Test"></property>
        <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认:false -->
        <property name="breakAfterAcquireFailure" value="false"></property>
        <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
        <property name="idleConnectionTestPeriod" value="0"></property>
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->
        <property name="maxStatementsPerConnection" value="10"></property>
    </bean>

    <!--指定扫描包-->
    <bean id="managerService"  class="cn.edu.gxnu.service.impl.ManagerServiceImpl"></bean>
    <bean id="doctorService"   class="cn.edu.gxnu.service.impl.DoctorServiceImpl"></bean>
    <bean id="hushiService"    class="cn.edu.gxnu.service.impl.HushiServiceImpl"></bean>
    <bean id="patientService"  class="cn.edu.gxnu.service.impl.PatientServiceImpl"></bean>
    <bean id="keshiService"    class="cn.edu.gxnu.service.impl.KeshiServiceImpl"></bean>
    <bean id="medicineService" class="cn.edu.gxnu.service.impl.MedicineServiceImpl"></bean>
    <bean id="shoushuService"  class="cn.edu.gxnu.service.impl.ShoushuServiceImpl"></bean>
    <bean id="bingfangService" class="cn.edu.gxnu.service.impl.BingfangServiceImpl"></bean>

    <!--Mapper代理开发，使用Spring自动扫描Mybatis的接口并装配-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.edu.gxnu.mapper"></property>
    </bean>

    <!-- 配置mybitas工厂，同时指定数据源，并与MyBatis完美整合 -->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>

        <!-- mapperLocations的属性值为Mybatis的核心配置文件 -->
        <property name="mapperLocations" value="classpath:cn/edu/gxnu/mapper/*Mapper.xml"></property>
        <property name="typeAliasesPackage" value="cn.edu.gxnu.bean"></property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 实现分页-->
                        <value>
                            helperDialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
</beans>